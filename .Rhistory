)
# Create a map of crime locations for 2023
leaflet(data = crime_2023) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
radius = 1,
color = "red",
opacity = 0.5
) %>%
setView(
lng = mean(crime_2023$Longitude, na.rm = TRUE),
lat = mean(crime_2023$Latitude, na.rm = TRUE),
zoom = 5
)
crime_2024_sample <- crime_2024 %>%
sample_n(10000)
crime_2024 <- crime_data %>%
filter(Year == 2024)
crime_2024_sample <- crime_2024 %>%
sample_n(10000)
# Clustered map for 2024
leaflet(data = crime_2024) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
clusterOptions = markerClusterOptions(),
color = "blue"
) %>%
setView(
lng = mean(crime_2024$Longitude, na.rm = TRUE),
lat = mean(crime_2024$Latitude, na.rm = TRUE),
zoom = 10
)
crime_2023_sample <- crime_data %>%
filter(Year == 2023) %>%
sample_n(10000)
# Leaflet map for 2023 (Red markers)
leaflet(data = crime_2023_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
radius = 1,
color = "red",
opacity = 0.5
) %>%
setView(
lng = mean(crime_2023_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2023_sample$Latitude, na.rm = TRUE),
zoom = 10
)
# Filter data for 2024 and sample 10,000 points
crime_2024_sample <- crime_data %>%
filter(Year == 2024) %>%
sample_n(10000)
# Leaflet map for 2024 (Blue markers)
leaflet(data = crime_2024_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
radius = 1,
color = "blue",
opacity = 0.5
) %>%
setView(
lng = mean(crime_2024_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2024_sample$Latitude, na.rm = TRUE),
zoom = 10
)
crime_2024 <- crime_data %>%
filter(Year == 2024)
# Filter data for 2024 and sample 10,000 points
crime_2024_sample <- crime_data %>%
filter(Year == 2024) %>%
sample_n(10000)
# Leaflet map for 2024 (Blue markers)
leaflet(data = crime_2024_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
radius = 1,
color = "blue",
opacity = 0.5
) %>%
setView(
lng = mean(crime_2024_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2024_sample$Latitude, na.rm = TRUE),
zoom = 10
)
# Analyze arrest rates over years
arrest_rates <- crime_data %>%
group_by(Year) %>%
summarise(
Total_Arrests = sum(Arrest == TRUE),
Total_Crimes = n(),
Arrest_Rate = Total_Arrests / Total_Crimes
)
# Visualize arrest rates
ggplot(arrest_rates, aes(x = Year, y = Arrest_Rate)) +
geom_bar(stat = "identity", fill = "darkgreen") +
labs(
title = "Arrest Rates by Year (2020-2024)",
x = "Year",
y = "Arrest Rate"
)
# Analyze arrest rates over years
arrest_rates <- crime_data %>%
group_by(Year) %>%
summarise(
Total_Arrests = sum(Arrest == TRUE),
Total_Crimes = n(),
Arrest_Rate = Total_Arrests / Total_Crimes
)
# Visualize arrest rates
ggplot(arrest_rates, aes(x = Year, y = Arrest_Rate)) +
geom_bar(stat = "identity", fill = "darkgreen") +
labs(
title = "Arrest Rates by Year (2020-2024)",
x = "Year",
y = "Arrest Rate"
)
# Filter for domestic crimes
domestic_crime <- crime_data %>%
filter(Domestic == TRUE) %>%
group_by(Year) %>%
summarise(Total_Domestic = n())
# Line plot for domestic crimes
ggplot(domestic_crime, aes(x = Year, y = Total_Domestic)) +
geom_line(color = "purple", size = 1) +
geom_point(color = "orange", size = 2) +
labs(
title = "Domestic Crimes Trend (2020-2024)",
x = "Year",
y = "Number of Domestic Crimes"
)
# Leaflet map for 2024 (Blue markers)
leaflet(data = crime_2024_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
radius = 1,
color = "blue",
opacity = 0.5
) %>%
setView(
lng = mean(crime_2024_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2024_sample$Latitude, na.rm = TRUE),
zoom = 10
)
# Create a clustered leaflet map for 2024
leaflet(data = crime_2024_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
clusterOptions = markerClusterOptions(), # Enable clustering for better performance
popup = ~paste(
"Type:", `Primary Type`,
"<br>Location:", `Location Description`
),
color = "blue",
opacity = 0.7
) %>%
setView(
lng = mean(crime_2024_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2024_sample$Latitude, na.rm = TRUE),
zoom = 12
) %>%
addLegend(
position = "bottomright",
colors = c("blue"),
labels = c("2024"),
title = "Year"
)
# Create a clustered leaflet map for 2023
leaflet(data = crime_2023_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
clusterOptions = markerClusterOptions(), # Enable clustering for better performance
popup = ~paste(
"Type:", `Primary Type`,
"<br>Location:", `Location Description`
),
color = "red", # Red color for 2023 markers
opacity = 0.7
) %>%
setView(
lng = mean(crime_2023_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2023_sample$Latitude, na.rm = TRUE),
zoom = 12
) %>%
addLegend(
position = "bottomright",
colors = c("red"),
labels = c("2023"),
title = "Year"
)
# Visualize yearly crime trends with subtitle and style adjustments
ggplot(yearly_crime, aes(x = Year, y = Total_Crimes)) +
geom_line(color = "darkgreen", size = 1) +
geom_point(color = "red", size = 2) +
labs(
title = "Yearly Crime Trends (2020-2024)",
subtitle = "A look at total reported crimes over the last five years",
x = "Year",
y = "Total Crimes"
) +
theme_minimal() +
theme(
panel.grid = element_blank()
)
# Visualize yearly crime trends with subtitle and style adjustments
ggplot(yearly_crime, aes(x = Year, y = Total_Crimes)) +
geom_line(color = "darkgreen", size = 1) + # Change line color to dark green
geom_point(color = "red", size = 2) +
labs(
title = "Yearly Crime Trends (2020-2024)",
subtitle = "A look at total reported crimes over the last five years", # Added subtitle
x = "Year",
y = "Total Crimes"
) +
theme_minimal() + # Minimal theme for cleaner aesthetics
theme(
panel.grid = element_blank(), # Remove gridlines
plot.title = element_text(size = 14, face = "bold", hjust = 0.5), # Style for title
plot.subtitle = element_text(size = 7, face = "italic", hjust = 0.5, margin = margin(t = 5, b = 10)), # Style for subtitle
axis.text.y = element_text(size = 9), # Style for y-axis text
axis.text.x = element_text(size = 9)  # Style for x-axis text
)
# Summarize crimes by type
crime_types <- crime_data %>%
group_by(`Primary Type`) %>%
summarise(Total = n()) %>%
arrange(desc(Total))
# Bar plot of top 10 crime types
ggplot(crime_types[1:10, ], aes(x = reorder(`Primary Type`, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(
title = "Top 10 Crime Types (2020-2024)",
x = "Crime Type",
y = "Total Crimes"
)
# Bar plot of top 10 crime types with subtitle and style adjustments
ggplot(crime_types[1:10, ], aes(x = reorder(`Primary Type`, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "darkblue") +
coord_flip() +
labs(
title = "Top 10 Crime Types (2020-2024)",
subtitle = "An overview of the most frequently reported crimes in Chicago",
x = "Crime Type",
y = "Total Crimes"
) +
theme_minimal() +
theme(
panel.grid = element_blank(), # Remove gridlines
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 7, face = "italic", hjust = 0.5, margin = margin(t = 5, b = 10)), # Style for subtitle
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9)
)
# Visualize arrest rates with subtitle and style adjustments
ggplot(arrest_rates, aes(x = Year, y = Arrest_Rate)) +
geom_bar(stat = "identity", fill = "darkgreen") +
labs(
title = "Arrest Rates by Year (2020-2024)",
subtitle = "An analysis of yearly trends in arrest rates",
x = "Year",
y = "Arrest Rate"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 7, face = "italic", hjust = 0.5, margin = margin(t = 5, b = 10)), # Style for subtitle
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9)
)
# Filter for domestic crimes
domestic_crime <- crime_data %>%
filter(Domestic == TRUE) %>%
group_by(Year) %>%
summarise(Total_Domestic = n())
# Line plot for domestic crimes
ggplot(domestic_crime, aes(x = Year, y = Total_Domestic)) +
geom_line(color = "purple", size = 1) +
geom_point(color = "orange", size = 2) +
labs(
title = "Domestic Crimes Trend (2020-2024)",
x = "Year",
y = "Number of Domestic Crimes"
)
# Line plot for domestic crimes with subtitle and style adjustments
ggplot(domestic_crime, aes(x = Year, y = Total_Domestic)) +
geom_line(color = "purple", size = 1) +
geom_point(color = "orange", size = 2) +
labs(
title = "Domestic Crimes Trend (2020-2024)",
subtitle = "Yearly trends in domestic crime cases across Chicago",
x = "Year",
y = "Number of Domestic Crimes"
) +
theme_minimal() + # Minimal theme for cleaner aesthetics
theme(
panel.grid = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 7, face = "italic", hjust = 0.5, margin = margin(t = 5, b = 10)), # Style for subtitle
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9)
)
library(RMariaDB)
con <- dbConnect(
RMariaDB::MariaDB(),
dbname = "Crime data",
host = "127.0.0.1",
port = 3306,
user = "root",
password = "welcometotheairport"
)
library(RMariaDB)
# Connect to MariaDB server (without specifying database)
con <- dbConnect(
RMariaDB::MariaDB(),
host = "127.0.0.1",
port = 3306,
user = "root",
password = "welcometotheairport"
)
# Create the database
dbExecute(con, "CREATE DATABASE `Crime data`;")
# Disconnect after creating the database
dbDisconnect(con)
library(RMariaDB)
# Connect to MariaDB server (without specifying database)
con <- dbConnect(
RMariaDB::MariaDB(),
host = "127.0.0.1",
port = 3306,
user = "root",
password = "welcometotheairport"
)
# Create the database
dbExecute(con, "CREATE DATABASE `Crime data`;")
library(RMariaDB)
# Connect to MariaDB server (without specifying database)
con <- dbConnect(
RMariaDB::MariaDB(),
host = "127.0.0.1",
port = 3306,
user = "root",
password = "welcometotheairport"
)
# Create the database
dbExecute(con, "CREATE DATABASE `Crime data`;")
# Write the cleaned data to a table
dbWriteTable(con, "cleaned_crime_data", crime_data, overwrite = TRUE)
# Connect to MariaDB server (without specifying database)
con <- dbConnect(
RMariaDB::MariaDB(),
host = "127.0.0.1",
port = 3306,
user = "root",
password = "welcometotheairport"
)
# Write the cleaned data to a table
dbWriteTable(con, "cleaned_crime_data", crime_data, overwrite = TRUE)
# Create the database
dbExecute(con, "CREATE DATABASE `Crime data`;")
# Create a clustered leaflet map for 2023 with a title and subtitle
leaflet(data = crime_2023_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
clusterOptions = markerClusterOptions(), # Enable clustering for better performance
popup = ~paste(
"Type:", `Primary Type`,
"<br>Location:", `Location Description`
),
color = "red", # Red color for 2023 markers
opacity = 0.7
) %>%
setView(
lng = mean(crime_2023_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2023_sample$Latitude, na.rm = TRUE),
zoom = 12
) %>%
addLegend(
position = "bottomright",
colors = c("red"),
labels = c("2023"),
title = "Year"
) %>%
# Add title and subtitle using addControl()
addControl(
html = "<h3 style='color:red;'>Crime Hotspots in 2023</h3>
<p style='color:gray;'>A clustered visualization of reported crimes in Chicago for the year 2023.</p>",
position = "topright"
)
# Create a clustered leaflet map for 2024 with a title and enhanced subtitle
leaflet(data = crime_2024_sample) %>%
addTiles() %>%
addCircleMarkers(
~Longitude, ~Latitude,
clusterOptions = markerClusterOptions(), # Enable clustering for better performance
popup = ~paste(
"Type:", `Primary Type`,
"<br>Location:", `Location Description`
),
color = "blue", # Blue color for 2024 markers
opacity = 0.7
) %>%
setView(
lng = mean(crime_2024_sample$Longitude, na.rm = TRUE),
lat = mean(crime_2024_sample$Latitude, na.rm = TRUE),
zoom = 12
) %>%
addLegend(
position = "bottomright",
colors = c("blue"),
labels = c("2024"),
title = "Year"
) %>%
# Add title and subtitle using addControl()
addControl(
html = "<h3 style='color:blue;'>Crime Hotspots in 2024</h3>
<p style='color:gray;'>A detailed visualization of crime distribution, uncovering areas with the highest incident density in Chicago for 2024.</p>",
position = "topright"
)
# Bar plot of top 10 crime types with subtitle and style adjustments
ggplot(crime_types[1:10, ], aes(x = reorder(`Primary Type`, -Total), y = Total)) +
geom_bar(stat = "identity", fill = "darkblue") +
coord_flip() +
labs(
title = "Top 10 Crime Types (2020-2024)",
subtitle = "An overview of the most frequently reported crimes in Chicago",
x = "Crime Type",
y = "Total Crimes"
) +
theme_minimal() +
theme(
panel.grid = element_blank(), # Remove gridlines
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 9, face = "italic", hjust = 0.5, margin = margin(t = 5, b = 10)), # Style for subtitle
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9)
)
# Visualize yearly crime trends with subtitle and style adjustments
ggplot(yearly_crime, aes(x = Year, y = Total_Crimes)) +
geom_line(color = "darkgreen", size = 1) +
geom_point(color = "red", size = 2) +
labs(
title = "Yearly Crime Trends (2020-2024)",
subtitle = "A look at total reported crimes over the last five years",
x = "Year",
y = "Total Crimes"
) +
theme_minimal() + # Minimal theme for cleaner aesthetics
theme(
panel.grid = element_blank(), # Remove gridlines
plot.title = element_text(size = 14, face = "bold", hjust = 0.5), # Style for title
plot.subtitle = element_text(size = 9, face = "italic", hjust = 0.5, margin = margin(t = 5, b = 10)), # Style for subtitle
axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9)
)
# Aggregate data by year for regression
crime_yearly <- crime_data %>%
group_by(Year) %>%
summarise(Total_Crimes = n(), Arrests = sum(Arrest, na.rm = TRUE)) %>%
mutate(Arrest_Rate = Arrests / Total_Crimes)
# Linear regression: Predict total crimes based on arrest rate
crime_model <- lm(Total_Crimes ~ Arrest_Rate, data = crime_yearly)
# Summary of regression results
summary(crime_model)
# Visualize regression
ggplot(crime_yearly, aes(x = Arrest_Rate, y = Total_Crimes)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
labs(
title = "Relationship Between Arrest Rate and Total Crimes",
x = "Arrest Rate",
y = "Total Crimes"
) +
theme_minimal()
# Aggregate data by year for regression
crime_yearly <- crime_data %>%
group_by(Year) %>%
summarise(Total_Crimes = n(), Arrests = sum(Arrest, na.rm = TRUE)) %>%
mutate(Arrest_Rate = Arrests / Total_Crimes)
# Linear regression: Predict total crimes based on arrest rate
crime_model <- lm(Total_Crimes ~ Arrest_Rate, data = crime_yearly)
# Extract regression equation
regression_eq <- paste0(
"y = ", round(coef(crime_model)[1], 2),
" + ", round(coef(crime_model)[2], 2), "x"
)
# Visualize regression
ggplot(crime_yearly, aes(x = Arrest_Rate, y = Total_Crimes)) +
geom_point(size = 3, color = "darkred") +
geom_smooth(method = "lm", color = "blue", se = TRUE) +
labs(
title = "Relationship Between Arrest Rate and Total Crimes",
subtitle = paste("Linear regression model showing the impact of arrest rates on total crimes.\nRegression Equation: ", regression_eq),
x = "Arrest Rate",
y = "Total Crimes"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "italic", hjust = 0.5, margin = margin(t = 10, b = 10)),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
